def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
def flutterVersionName = localProperties.getProperty('flutter.versionName')
def flutterApplicationId = localProperties.getProperty('flutter.applicationId')
def signingKeyAlias = localProperties.getProperty('signing.keyAlias')
def signingStoreFile = localProperties.getProperty('signing.storeFile')
def signingStorePassword = localProperties.getProperty('signing.storePassword')
def signingKeyPassword = localProperties.getProperty('signing.keyPassword')

println '------------------>'
println signingKeyAlias
println signingStoreFile
println signingStorePassword
println signingKeyPassword
println '------------------>'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId flutterApplicationId
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
       release {
           keyAlias signingKeyAlias
           storeFile file(signingStoreFile)
           storePassword signingStorePassword
           keyPassword signingKeyPassword
       }
    }


    buildTypes {
        release {

            ndk{
                abiFilters "armeabi-v7a"
            }

            signingConfig signingConfigs.release

            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            ndk {
                abiFilters  "armeabi-v7a","arm64-v8a", "x86"
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
